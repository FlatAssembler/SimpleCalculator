
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.RhinoException;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author teo.samarzija
 */
public class ArithmeticExpressionCompiler extends javax.swing.JFrame {

   private Context ctx;
   private Scriptable scope;
    /**
     * Creates new form ArithmeticExpressionCompiler
     */
    public ArithmeticExpressionCompiler() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Arithmetic Expression Compiler - Advanced Version");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText(";AEC is a simplified programming language made by Teo Samarzija.\n;You can find some example AEC programs, together with the\n;32-bit Windows executables, here:\n;https://github.com/FlatAssembler/ArithmeticExpressionCompiler/blob/master/ArithmeticExpressionCompiler.zip?raw=true\nn:=20\ni:=0\nWhile i<n | i=n\n\tIf i=0\n\t\tfib(i):=0\n\tElseIf i=1\n\t\tfib(i):=1\n\tElse\n\t\tfib(i):=fib(i-1)+fib(i-2)\n\tEndIf\n\ti:=i+1\nEndWhile\nfib(n) ;Store the n-th Fibonacci number into \"result\".\n;If you now click \"Convert AEC to Assembly\", you should get\n;an Assembly code that fills the first 20 fields of the array\n;named \"fib\" with the respective Fibonacci numbers. And you should\n;be able to compile that code by embedding it into a program\n;that can be compiled with FlatAssembler (and, of course, declaring\n;the variables and the array in Assembly).\n;An example of such a FlatAssembler program is available here:\n;https://flatassembler.github.io/test.ASM");
        jTextArea1.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Convert AEC to Assembly");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Open an AEC file");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save the Assembly to a file");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc=new JFileChooser();
        FileFilter filter=new FileNameExtensionFilter("ASM file","asm","ASM");
        fc.setFileFilter(filter);
        int ret=fc.showSaveDialog(this);
        if (ret==fc.APPROVE_OPTION) {
            File izlaz=fc.getSelectedFile();
            try {
                String tmp=jTextArea2.getText();
                Files.writeString(FileSystems.getDefault().getPath(izlaz.getPath()), tmp);
            }
            catch(IOException e) {
                JOptionPane.showMessageDialog(this, "Can't open the file \""+izlaz.getName()+"\" for reading!\n"+
                       " Error \""+e.toString()+"\"");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc=new JFileChooser();
        FileFilter filter=new FileNameExtensionFilter("AEC file","aec","AEC");
        fc.setFileFilter(filter);
        int ret=fc.showOpenDialog(this);
        if (ret==fc.APPROVE_OPTION){
            File ulaz=fc.getSelectedFile();
            try {
                String tmp=Files.readString(FileSystems.getDefault().getPath(ulaz.getPath()));
                jTextArea1.setText(tmp);
            }
            catch (IOException e) {
               JOptionPane.showMessageDialog(this, "Can't open the file \""+ulaz.getName()+"\" for reading!\n"+
                       " Error \""+e.toString()+"\"");
             
            }
          }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        ctx.exit();
    }//GEN-LAST:event_formWindowClosing
    static public String getIEEE754(float x) {
        return String.format("0x%x", Float.floatToRawIntBits(x));
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setBounds(0,0,640, 480);
        jTextArea1.select(0, 0);
        ctx=Context.enter();
        scope=ctx.initStandardObjects();
        String compilerCode = null,controlCode = null;
        try {
            compilerCode=Files.readString(FileSystems.getDefault().getPath("compiler.js"));
            controlCode=Files.readString(FileSystems.getDefault().getPath("control.js"));
        }
        catch (IOException e) {
            JOptionPane.showMessageDialog(this,"Can't open the JavaScript files \"compiler.js\" and \"control.js\" for reading!?\n"+
                    "Error message: \""+e.toString()+"\"");
            this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));
        }
        try {
            ctx.evaluateString(scope, compilerCode, "compiler.js", 0,null);
            ctx.evaluateString(scope,controlCode,"control.js",0,null);
            Object ArithmeticExpressionCompilerClass=ctx.javaToJS(this,scope);
            ScriptableObject.putProperty(scope, "ArithmeticExpressionCompilerClass", ArithmeticExpressionCompilerClass);
            ctx.evaluateString(scope,
                    "var getIEEE754=ArithmeticExpressionCompilerClass.getIEEE754;\n"+
                    "highlight=false;\n",
                    "ArithmeticExpressionCompiler.java",0,null);
            
        }
        catch(RhinoException e) {
            JOptionPane.showMessageDialog(this, "Rhino reports that either \"compiler.js\" or \"control.js\" is corrupt!?\n"+
                    "Error message: \""+e.getMessage()+"\".");
            this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));   
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String ulaz=jTextArea1.getText();
        String trenutnaLinija=new String();
        int trenutniRedak=1;
        for (int i=0; i<ulaz.length()+1; i++) {
            if (i!=ulaz.length() && ulaz.charAt(i)=='\"')
                trenutnaLinija+="\\\"";
            else if (i==ulaz.length() || ulaz.charAt(i)=='\n') {
                trenutnaLinija="compileString(\""+trenutnaLinija+"\")";
                try {
                    ctx.evaluateString(scope, trenutnaLinija, "tmp.aec", 0, null);
                }
                catch(RhinoException e) {
                    JOptionPane.showMessageDialog(this,"Uncaught exception in JavaScript when processing the line #"+trenutniRedak+"!\n"+
                            e.details());
                    jTextArea2.setText(
                            "Error on line #"+trenutniRedak+"\n"+
                            e.details()+"\n"+
                            trenutnaLinija
                            );
                    this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_OPENED));
                    return;
                }
                trenutnaLinija=new String();
                trenutniRedak++;
            }
            else if (ulaz.charAt(i)=='\t')
                trenutnaLinija+="\\t";
            else if (ulaz.charAt(i)!='\r')
                trenutnaLinija+=ulaz.charAt(i);
        }
        jTextArea2.setText(
                ";Generated by ArithmeticExpressionCompiler (https://flatassembler.github.io/compiler.html) run in Rhino.\n"+
                        ctx.evaluateString(scope, "assembler", "aec.tmp", 0,null).toString()
        );
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArithmeticExpressionCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArithmeticExpressionCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArithmeticExpressionCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArithmeticExpressionCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArithmeticExpressionCompiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
